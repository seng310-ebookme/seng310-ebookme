<?xml version="1.0" encoding="UTF-8"?>

<!--
Ant build file for ebook_packager project.
-->
<project name="ebookme_packager" default="dist-packed" basedir=".">

	<description>Builds EBookME packager</description>

	<!-- import properties -->
	<import file="properties.xml"/>
		
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="Output" />
	</target>
	
	<target name="_check_sf_ready_file">
		<condition property="sfProjectReady">
			<available file="${sfProjectArchive}"/>
		</condition>
	</target>
	<target name="_get_sf_archive" depends="_check_sf_ready_file" unless="sfProjectReady">
		<get src="http://mesh.dl.sourceforge.net/sourceforge/${sfProject}/${sfProjectArchive}"
			dest="${sfProjectArchive}"/>
	</target>
	
	<target name="prepare_ext_tasks" depends="">
		<taskdef classpath="lib/orangevolt-ant-tasks-1.3.5.jar" resource="com/orangevolt/tools/ant/taskdefs.properties" />
	</target>
	
	<target name="prepare-build" depends="clean,prepare_ext_tasks">
		<mkdir dir="${src.filtered.dir}" />
		<mkdir dir="${bin.dir}" />
		<mkdir dir="${dist.doc.dir}"/>
		<mkdir dir="${dist.samples.dir}"/>
		<mkdir dir="Output"/>
		
		<!-- set classpath -->
		<path id="project.classpath">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
				<exclude name="me-applet.jar" />
			</fileset>
		</path>

		<copy todir="${src.filtered.dir}">
			<fileset dir="src">
				<include name="**" />
			</fileset>
			<fileset dir="${ebook_path}/src">
				<include name="**/Common.java" />
			</fileset>
			<filterset refid="ebookme.filterset"/>		
		</copy>

		<!-- copy external libs and launchers -->
		<copy todir="${dist.dir}">
			<fileset dir=".">
				<include name="application.properties.sample"/>
				<include name="lib/*.jar"/>
				<exclude name="lib/orangevolt-ant-tasks*.jar" />
				<exclude name="lib/swing-layout*.jar" />
			</fileset>
			<fileset dir="other">
				<include name="*.exe"/>
				<include name="*.bat" />
				<include name="*.sh" />
			</fileset>
		</copy>

		<!-- unpack swing layout -->
		<unzip src="lib/swing-layout-1.0.jar" dest="${bin.dir}">
			<patternset>
				<include name="**/*.class" />
			</patternset>
		</unzip>

		<!-- copy resources -->
		<copy todir="${bin.dir}">
			<fileset dir="${res.dir}">
				<include name="**"/>
			</fileset>
		</copy>

		<!-- hack for our Slovak brothers - they can read czech messages -->
		<property name="resourcePackage" value="cz/cacek/ebook/packager/resources" />
		<copy tofile="${bin.dir}/${resourcePackage}/messages_sk.properties" file="${bin.dir}/${resourcePackage}/messages_cs.properties" />

		<!-- copy webstart icon -->
		<copy tofile="${build.dir}/ebookme.jpg" file="other/ebookme.jpg" />

		<!-- create Class-Path attribute value for MANIFEST.MF -->
		<pathconvert property="manifest.classpath" pathsep=" ">
			<path refid="project.classpath" />
			<mapper>
				<chainedmapper>
					<!-- remove absolute path -->
					<flattenmapper />

					<!-- add lib/ prefix -->
					<globmapper from="*" to="lib/*" />
				</chainedmapper>
			</mapper>
		</pathconvert>
	</target>

	<target name="jme" depends="prepare-build">
		<!--
		<fail unless="sfProjectReady">
	    No Ebook module present.
	    Please do CVS checkout like:
	    cvs -d:pserver:anonymous@ebookme.cvs.sourceforge.net:/cvsroot/ebookme login
	    cvs -z3 -d:pserver:anonymous@ebookme.cvs.sourceforge.net:/cvsroot/ebookme co -P ebook
	    in the parent directory.
		</fail>
		-->
		<ant dir="${ebook_path}" inheritAll="false"/>

		<copy todir="${bin.dir}">
			<fileset dir="${ebook_path}/${build.dir}">
				<include name="ebook.ja?" />
			</fileset>
		</copy>	
	</target>
	
	<target name="compile" depends="jme,prepare-build">
		<javac srcdir="${src.filtered.dir}" nowarn="${compile.nowarn}"
			destdir="${bin.dir}" debug="${compile.debug}"
			deprecation="${compile.deprecation}" optimize="${compile.optimize}"
			source="${compile.source}" target="${compile.target}"
			classpathref="project.classpath"/>
	</target>
	
	<target name="jnlp">
		<jnlp tofile="${build.dir}/ebookme.jnlp" codebase="http://ebookme.sourceforge.net/webstart" href="ebookme.jnlp" spec="1.0+">
			<information>
				<title>EBookME</title>
				<vendor>Josef Cacek</vendor>
				<description>Creates e-books (Java ME applications) for mobile devices supporting MIDP 1.0.</description>
				<description kind="short">EBookME is a generator for Java ME e-books</description>
				<icon href="ebookme.jpg" />
				<offline_allowed />
				<shortcut>
					<desktop />
				</shortcut>
			</information>
			<security>
				<all_permissions />
			</security>
			<resources>
				<j2se version="1.4+" />
				<jar href="${ebookme.filename}.jar" main="true" />
				<fileset dir="${dist.dir}">
					<include name="lib/*.jar" />
					<!-- emulator as applet is only necessary on ebookme web -->
					<exclude name="lib/me-applet.jar" />
				</fileset>
			</resources>
			<application_desc main_class="cz.cacek.ebook.packager.Packager" />
		</jnlp>
	</target>
	
	<target name="jar" depends="compile,jnlp">
		<jar destfile="${dist.dir}/${ebookme.filename}.jar" basedir="${bin.dir}">
			<manifest>
				<attribute name="Main-Class" value="cz.cacek.ebook.packager.Packager" />
				<attribute name="Class-Path" value="${manifest.classpath}" />
				<attribute name="Implementation-Vendor" value="Josef Cacek"/>
				<attribute name="Implementation-Title" value="EBookME"/>
				<attribute name="Implementation-Version" value="${ebookme.version} ${build.timestamp}"/>
			</manifest>
		</jar>
	</target>
	
	<target name="signedJar" depends="jar">
		<signjar storepass="${passwd}" alias="${keyalias}" storetype="${kstype}" keystore="${kspath}">
			<fileset dir="${dist.dir}">
				<include name="*.jar" />
				<include name="lib/*.jar" />
			</fileset>
		</signjar>
	</target>
	
	<target name="signOuterJar">
		<signjar storepass="${passwd}" jar="${outerjar}" alias="${keyalias}" storetype="${kstype}" keystore="${kspath}" />
	</target>

	<target name="ooo_start">
		<echo>Opening Open Office</echo>
		<exec failonerror="false" spawn="true"
				executable="${ooo.dir}\program\soffice.exe">
			<arg line="-headless"/>
			<arg line="-accept='socket,port=8100;urp;'"/>
		</exec>
		<echo>Open Office open</echo>
	</target>

	<target name="doc" depends="prepare-build,ooo_start" description="Prepare documentation to dist directory">
		<echo message="Converting documentation (${ebookme.filename}.odt->pdf)" />

		<antcall target="_get_sf_archive">
			<param name="sfProject" value="${jodconverter.project}"/>
			<param name="sfProjectArchive" value="${jodconverter.zip}"/>
		</antcall>
		<unzip src="${jodconverter.zip}" dest="${build.dir}"/>

		<java jar="${build.dir}/${jodconverter.dir}/lib/jodconverter-cli-${jodconverter.version}.jar" fork="true">
			<arg value="doc/${ebookme.filename}.odt"/>
			<arg value="${dist.doc.dir}/${ebookme.filename}.pdf"/>
		</java>
		
		<copy todir="${dist.doc.dir}">
			<fileset dir="doc">
				<include name="*.txt" />
				<include name="ThirdPartyLicenses/*" />
			</fileset>
		</copy>
	</target>

	<target name="samples" depends="signedJar" description="Create sample ebooks">
		<echo message="Converting sample EBooks" />

		<java jar="${dist.dir}/${ebookme.filename}.jar" fork="true">
			<jvmarg value="-Xmx512m"/>
			<jvmarg value="-Duser.language=en"/>
			<arg value="-Ddescription=The Old Testament of the King James Version of the Bible"/>
			<arg value="-Dname=The Old Testament"/>
			<arg value="samples/kjv1.txt"/>
			<arg value="-Ddescription=The Old New of the King James Version of the Bible"/>
			<arg value="-Dname=The New Testament"/>
			<arg value="samples/kjv2.txt"/>
			<arg value="-Dout=${dist.samples.dir}/bible"/>
			<arg value="-Dsplashimage=samples/bibleCover.jpg"/>
		</java>

		<java jar="${dist.dir}/${ebookme.filename}.jar" fork="true">
			<jvmarg value="-Xmx512m"/>
			<jvmarg value="-Duser.language=cs"/>
			<arg value="-Dout=${dist.samples.dir}/akazda"/>
			<arg value="-Dcharset=windows-1250"/>
			<arg value="-Ddescription=Povídka Alexandra Kazdy"/>
			<arg value="-Dname=Princ a drak"/>
			<arg value="samples/ak1.txt"/>
			<arg value="-Dname=Závod"/>
			<arg value="samples/ak2.txt"/>
			<arg value="-Dname=Masky"/>
			<arg value="samples/ak3.txt"/>
			<arg value="-Dname=Linda píše povídku"/>
			<arg value="samples/ak4.txt"/>
			<arg value="-Dsplashimage=samples/bibleCover.jpg"/>
		</java>

		<java jar="${dist.dir}/${ebookme.filename}.jar" fork="true">
			<jvmarg value="-Xmx512m"/>
			<jvmarg value="-Duser.language=cs"/>
			<arg value="-fsamples/kaja.properties"/>
			<arg value="-Dout=${dist.samples.dir}/kaja"/>
			<arg value="-Dname=Školák Kája Mařík 1"/>
			<arg value="samples/kaja1.txt"/>
			<arg value="-Dname=Školák Kája Mařík 2"/>
			<arg value="samples/kaja2.txt"/>
			<arg value="-Dname=Školák Kája Mařík 3"/>
			<arg value="samples/kaja3.txt"/>
			<arg value="-Dname=Školák Kája Mařík 4"/>
			<arg value="samples/kaja4.txt"/>
			<arg value="-Dname=Školák Kája Mařík 5"/>
			<arg value="samples/kaja5.txt"/>
			<arg value="-Dname=Školák Kája Mařík 6"/>
			<arg value="samples/kaja6.txt"/>
			<arg value="-Dname=Školák Kája Mařík 7"/>
			<arg value="samples/kaja7.txt"/>
		</java>
	</target>

	<target name="dist" depends="doc,samples" description="Creates unpacked version of application">
		<echo message="Creating an distribution" />
	</target>

	<target name="dist-packed" depends="zip,installer" description="Creates zip and windows installer">
		<echo message="Creating an distribution" />
	</target>

	<target name="installer" depends="signedJar">
		<echo message="Creating a windows setup" />
		<exec failonerror="false"
				executable="${innosetup.dir}\iscc.exe">
			<arg line="EBookME.iss"/>
			<arg line="/dMyAppName=EBookME"/>
			<arg line="/dMyAppVersion=${ebookme.version}"/>
			<arg line="/dMyAppVersionWin=${ebookme.version}.0"/>
			<arg line="/dMyAppId=EBookME"/>
			<arg line="/dJreInstaller=${jre.installer}"/>
			<arg line="/dMyAppFilename=${ebookme.filename}"/>
			<arg line="/dDistDir=${dist.dir}"/>
		</exec>
	</target>

	<target name="zip" depends="dist">
		<echo message="Creating a zip release" />

		<zip destfile="Output/EBookME-${ebookme.version}.zip">
			<fileset dir="${build.dir}" includes="${app.dir}/**"/>
		</zip>
	</target>

</project>
